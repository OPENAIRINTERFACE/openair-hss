#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the terms found in the LICENSE file in the root of this source tree.
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
# Dockerfile for the Open-Air-Interface HSS service
#   Valid for CentOS 7
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# BUILDER IMAGE
#---------------------------------------------------------------------
FROM centos:7 as oai-hss-builder

ARG EURECOM_PROXY
ARG BUILD_FOR_CI
ARG CI_SRC_BRANCH
ARG CI_SRC_COMMIT
ARG CI_DEST_BRANCH

RUN yum update -y \
  && yum install centos-release-scl -y \
  && yum-config-manager --enable rhel-server-rhscl-7-rpms -y \
  && yum install -y \
    devtoolset-7 \
    psmisc \
    git \
  && yum clean all -y \
  && rm -rf /var/cache/yum

# Some GIT configuration command quite useful
RUN /bin/bash -c "if [[ -v EURECOM_PROXY ]]; then git config --global http.proxy $EURECOM_PROXY; fi"
RUN git config --global https.postBuffer 123289600
RUN git config --global http.sslverify false
# In normal case, we build out of the develop branch
RUN /bin/bash -c "if [[ -v CI_SRC_BRANCH ]]; then git clone https://github.com/OPENAIRINTERFACE/openair-hss.git -b $CI_SRC_BRANCH /openair-hss; else git clone https://github.com/OPENAIRINTERFACE/openair-hss.git -b develop /openair-hss; fi"
# For CI, especially for Pull/Merge Requests, we build out of temp merge
WORKDIR /openair-hss
RUN /bin/bash -c "if [[ -v BUILD_FOR_CI ]]; then git config --global user.name \"OAI CI\"; fi"
RUN /bin/bash -c "if [[ -v BUILD_FOR_CI ]]; then git config --global user.email ci@openairinterface.org; fi"
RUN /bin/bash -c "if [[ -v BUILD_FOR_CI ]]; then git checkout -f $CI_SRC_COMMIT; fi"
RUN /bin/bash -c "if [[ -v BUILD_FOR_CI ]]; then git merge --ff origin/$CI_DEST_BRANCH -m \"Temporary merge for CI\"; fi"

# wait for it
workdir /
RUN git clone https://github.com/vishnubob/wait-for-it.git

# Installing and Building HSS
WORKDIR /openair-hss/scripts
RUN scl enable devtoolset-7 'cd /openair-hss/scripts && ./build_hss_rel14 --check-installed-software --force'
RUN cp /usr/local/lib64/libpistache.a /usr/local/lib/libpistache.a
RUN scl enable devtoolset-7 'cd /openair-hss/scripts && ./build_hss_rel14 --clean --build-type Release'

#---------------------------------------------------------------------
# TARGET IMAGE
#---------------------------------------------------------------------
FROM centos:7 as oai-hss
ENV TZ=Europe/Paris
# We install some debug tools for the moment in addition of mandatory libraries
RUN yum update -y && yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
  && yum install -y \
    tzdata \
    psmisc \
    openssl \
    net-tools \
    tcpdump \
    lksctp-tools \
    libuv \
    nettle \
    gnutls \
    libconfig \
    libidn \
    python \
    python3 \
    python-pip \
    python3-pip \
  && yum clean all -y \
  && rm -rf /var/cache/yum \
  && pip install --user cassandra-driver \
  && pip3 install --user cassandra-driver

# Copying executable and generated libraries
WORKDIR /openair-hss/bin
COPY --from=oai-hss-builder /openair-hss/build/hss_rel14/bin/hss oai_hss

COPY --from=oai-hss-builder /usr/local/lib/libfd* /usr/local/lib/
COPY --from=oai-hss-builder /usr/local/lib/freeDiameter/* /usr/local/lib/freeDiameter/
COPY --from=oai-hss-builder /usr/local/lib64/libcassandra.* /lib64/

# Copying template configuration files
# The configuration folder will be flat
WORKDIR /openair-hss/etc
COPY --from=oai-hss-builder /openair-hss/etc/hss_rel14.conf .
COPY --from=oai-hss-builder /openair-hss/etc/hss_rel14.json .
RUN sed -i -e 's#freeDiameter##' hss_rel14.json
COPY --from=oai-hss-builder /openair-hss/etc/acl.conf .
COPY --from=oai-hss-builder /openair-hss/etc/oss.json .
COPY --from=oai-hss-builder /openair-hss/etc/hss_rel14_fd.conf .
RUN sed -i -e "s#@PREFIX@/freeDiameter#@PREFIX@#g" hss_rel14_fd.conf

# Copy the certificate generation script
WORKDIR /openair-hss/scripts
COPY --from=oai-hss-builder /openair-hss/src/hss_rel14/bin/make_certs.sh .
COPY --from=oai-hss-builder /openair-hss/scripts/data_provisioning_users .
COPY --from=oai-hss-builder /openair-hss/scripts/data_provisioning_mme .
COPY --from=oai-hss-builder /wait-for-it/wait-for-it.sh .
RUN sed -i -e "s@/freeDiameter@@" -e "s@\$SUDO @@" make_certs.sh

WORKDIR /openair-hss
RUN openssl rand -out /root/.rnd 128
RUN ldconfig
